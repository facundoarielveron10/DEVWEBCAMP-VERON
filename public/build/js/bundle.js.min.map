{"version":3,"sources":["app.js","tags.js"],"names":["menu","document","querySelector","sidebar","addEventListener","e","classList","toggle","tagsInput","tagsDiv","tagsInputHidden","tags","actualizarInputHidden","value","toString","eliminarTag","target","remove","filter","tag","textContent","keyCode","trim","preventDefault","forEach","etiqueta","createElement","add","ondblclick","appendChild"],"mappings":"AACA,MAAAA,KAAAC,SAAAC,cAAA,kCACAC,QAAAF,SAAAC,cAAA,uBACAF,KAAAI,iBAAA,QAAAC,IACAF,QAAAG,UAAAC,OAAA,aCJA,WAEA,MAAAC,EAAAP,SAAAC,cAAA,eAEA,GAAAM,EAAA,CAEA,MAAAC,EAAAR,SAAAC,cAAA,SAEAQ,EAAAT,SAAAC,cAAA,iBAEA,IAAAS,EAAA,GAyCA,SAAAC,IACAF,EAAAG,MAAAF,EAAAG,WAIA,SAAAC,EAAAV,GACAA,EAAAW,OAAAC,SACAN,EAAAA,EAAAO,OAAAC,GAAAA,IAAAd,EAAAW,OAAAI,aACAR,IA/CAJ,EAAAJ,iBAAA,YAEA,SAAAC,GACA,GAAA,KAAAA,EAAAgB,QAAA,CAEA,GAAA,KAAAhB,EAAAW,OAAAH,MAAAS,QAAAjB,EAAAW,OAAAH,MAAAS,OAAA,EACA,OAGAjB,EAAAkB,iBAEAZ,EAAA,IAAAA,EAAAN,EAAAW,OAAAH,MAAAS,QAEAd,EAAAK,MAAA,GASAJ,EAAAW,YAAA,GACAT,EAAAa,QAAAL,IAEA,MAAAM,EAAAxB,SAAAyB,cAAA,MAEAD,EAAAnB,UAAAqB,IAAA,mBAEAF,EAAAL,YAAAD,EACAM,EAAAG,WAAAb,EAEAN,EAAAoB,YAAAJ,KAGAb,SA/CA","file":"bundle.js","sourcesContent":["// Menu de Hamburguesa\r\nconst menu = document.querySelector('.dashboard__hamburguesa--icono');\r\nconst sidebar = document.querySelector('.dashboard__sidebar');\r\nmenu.addEventListener('click', (e) => {\r\n    sidebar.classList.toggle('mostrar');\r\n});","(function() {\r\n    // Seleccionamos el input para escribir los tags\r\n    const tagsInput = document.querySelector('#tags_input');\r\n    // Si existe el input para los tag\r\n    if (tagsInput) {\r\n        // Seleccionamos todos los divs que contienen los tags\r\n        const tagsDiv = document.querySelector('#tags');\r\n        // Seleccionamos el input hiddent\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n        // Guardamos las etiquetas en un arreglo\r\n        let tags = [];\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n        // Mira si el usuario esta escribiendo algo en el input\r\n        function guardarTag(e) {\r\n            if (e.keyCode === 44) {\r\n                // Si enviamos el input vacio\r\n                if (e.target.value.trim() === '' || e.target.value.trim() < 1) {\r\n                    return;\r\n                }\r\n                // Colocamos por default el input\r\n                e.preventDefault();\r\n                // Vamos guardando los tags\r\n                tags = [...tags, e.target.value.trim()];\r\n                // Limpiamos el input\r\n                tagsInput.value = '';\r\n\r\n                // Mostramos los tags\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        // Muestra todos los tags ingresados por el usuario\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                // Creamos la etiqueta\r\n                const etiqueta = document.createElement('LI');\r\n                // Le agregamos una clase para darle estilo\r\n                etiqueta.classList.add('formulario__tag');\r\n                // Le agregamos el contenido a la etiqueta\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                // Mostramos la etiqueta en el DOM\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n            \r\n            actualizarInputHidden();\r\n        }\r\n\r\n        // Actualiza el input al agregar y quitar etiquetas del arreglo\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n\r\n        // Elimina un tag\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n    }\r\n})();"]}