{"version":3,"sources":["app.js","horas.js","tags.js"],"names":["menu","document","querySelector","sidebar","addEventListener","e","classList","toggle","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","terminoBusqueda","target","name","value","Object","values","includes","async","url","resultados","fetch","json","buscarEventos","forEach","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","add","ondblclick","eliminarTag","appendChild","actualizarInputHidden","toString","remove","filter","split","keyCode","trim","preventDefault"],"mappings":"AACA,MAAAA,KAAAC,SAAAC,cAAA,kCACAC,QAAAF,SAAAC,cAAA,uBACAF,KAAAI,iBAAA,QAAAC,IACAF,QAAAG,UAAAC,OAAA,aCJA,WAKA,GAHAN,SAAAC,cAAA,UAGA,CAEA,IAAAM,EAAA,CACAC,aAAA,GACAC,IAAA,IAIA,MAAAC,EAAAV,SAAAC,cAAA,yBAEAU,EAAAX,SAAAY,iBAAA,gBACAZ,SAAAC,cAAA,mBAQA,SAAAY,EAAAT,GAEAG,EAAAH,EAAAU,OAAAC,MAAAX,EAAAU,OAAAE,MAEAC,OAAAC,OAAAX,GAAAY,SAAA,KAQAC,iBAEA,MAAAX,IAAAA,EAAAD,aAAAA,GAAAD,EAEAc,EAAA,+BAAAZ,kBAAAD,IAGAc,QAAAC,MAAAF,SACAC,EAAAE,OAZAC,GAbAf,EAAAP,iBAAA,SAAAU,GAEAF,EAAAe,QAAAjB,GAAAA,EAAAN,iBAAA,SAAAU,KArBA,GCAA,WAEA,MAAAc,EAAA3B,SAAAC,cAAA,eAEA,GAAA0B,EAAA,CAEA,MAAAC,EAAA5B,SAAAC,cAAA,SAGA4B,EAAA7B,SAAAC,cAAA,iBAGA,IAAA6B,EAAA,GA+BA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAJ,QAAAO,IAEA,MAAAC,EAAAlC,SAAAmC,cAAA,MAEAD,EAAA7B,UAAA+B,IAAA,mBAEAF,EAAAF,YAAAC,EACAC,EAAAG,WAAAC,EAEAV,EAAAW,YAAAL,KAGAM,IAIA,SAAAA,IACAX,EAAAb,MAAAc,EAAAW,WAIA,SAAAH,EAAAlC,GACAA,EAAAU,OAAA4B,SACAZ,EAAAA,EAAAa,OAAAV,GAAAA,IAAA7B,EAAAU,OAAAkB,aACAQ,IAtDA,KAAAX,EAAAb,QACAc,EAAAD,EAAAb,MAAA4B,MAAA,KACAb,KAIAJ,EAAAxB,iBAAA,YAGA,SAAAC,GACA,GAAA,KAAAA,EAAAyC,QAAA,CAEA,GAAA,KAAAzC,EAAAU,OAAAE,MAAA8B,QAAA1C,EAAAU,OAAAE,MAAA8B,OAAA,EACA,OAGA1C,EAAA2C,iBAEAjB,EAAA,IAAAA,EAAA1B,EAAAU,OAAAE,MAAA8B,QAEAnB,EAAAX,MAAA,GAGAe,SAtCA","file":"bundle.js","sourcesContent":["// Menu de Hamburguesa\r\nconst menu = document.querySelector('.dashboard__hamburguesa--icono');\r\nconst sidebar = document.querySelector('.dashboard__sidebar');\r\nmenu.addEventListener('click', (e) => {\r\n    sidebar.classList.toggle('mostrar');\r\n});","(function() {\r\n    // Seleccionamos las horas\r\n    const horas = document.querySelector('#horas');\r\n\r\n    // Verificamos la existencia de esas horas\r\n    if (horas) {\r\n        // Buscamos las horas disponibles\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        // Seleccionamos la categoria\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        // Seleccionamos los dias\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        \r\n        // Guardamos en busqueda la categoria\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        // Guardamos en busqueda el dia\r\n        dias.forEach( dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        // Guarda los datos seleccionados por el usuario\r\n        function terminoBusqueda(e) {\r\n            // Guardamos el dia y la categoria seleccionadas por el usuario\r\n            busqueda[e.target.name] = e.target.value;\r\n            // Nos aseguramos que el objeto busqueda este lleno\r\n            if (Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n            // Buscamos los eventos con esa categoria y ese dia\r\n            buscarEventos();\r\n        }\r\n\r\n        // Busca el evento con una categoria y dia especificos\r\n        async function buscarEventos() {\r\n            // Extraemos el dia y la categoria\r\n            const { dia , categoria_id } = busqueda;\r\n            // URL para la peticion\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            \r\n            // Nos traemos nos resultados\r\n            const resultados = await fetch(url);\r\n            const eventos = await resultados.json();\r\n\r\n            // Nos dice que horas estan disponibles para los eventos\r\n            obtenerHorasDisponibles();\r\n        }\r\n\r\n        function obtenerHorasDisponibles() {\r\n            \r\n        }\r\n    }\r\n})();","(function() {\r\n    // Seleccionamos el input para escribir los tags\r\n    const tagsInput = document.querySelector('#tags_input');\r\n    // Si existe el input para los tag\r\n    if (tagsInput) {\r\n        // Seleccionamos todos los divs que contienen los tags\r\n        const tagsDiv = document.querySelector('#tags');\r\n        \r\n        // Seleccionamos el input hiddent\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n        \r\n        // Guardamos las etiquetas en un arreglo\r\n        let tags = [];\r\n        \r\n        // Recuperar del input oculto los datos\r\n        if (tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n        \r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n        \r\n        // Mira si el usuario esta escribiendo algo en el input\r\n        function guardarTag(e) {\r\n            if (e.keyCode === 44) {\r\n                // Si enviamos el input vacio\r\n                if (e.target.value.trim() === '' || e.target.value.trim() < 1) {\r\n                    return;\r\n                }\r\n                // Colocamos por default el input\r\n                e.preventDefault();\r\n                // Vamos guardando los tags\r\n                tags = [...tags, e.target.value.trim()];\r\n                // Limpiamos el input\r\n                tagsInput.value = '';\r\n\r\n                // Mostramos los tags\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        // Muestra todos los tags ingresados por el usuario\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                // Creamos la etiqueta\r\n                const etiqueta = document.createElement('LI');\r\n                // Le agregamos una clase para darle estilo\r\n                etiqueta.classList.add('formulario__tag');\r\n                // Le agregamos el contenido a la etiqueta\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                // Mostramos la etiqueta en el DOM\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n            \r\n            actualizarInputHidden();\r\n        }\r\n\r\n        // Actualiza el input al agregar y quitar etiquetas del arreglo\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n\r\n        // Elimina un tag\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n    }\r\n})();"]}